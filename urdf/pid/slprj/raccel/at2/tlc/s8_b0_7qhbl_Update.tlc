%implements s8_b0_7qhbl_Update "C"

%function UpdateForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

NeslSimulationData *simulationData;
real_T time;
boolean_T tmp;
real_T tmp_p[24];
int_T tmp_e[7];
NeuDiagnosticManager *diagnosticManager;
NeuDiagnosticTree *diagnosticTree;
char *msg;
int32_T i;
%closefile localVarDecl
if (%<(SLibCGIRIsSampleHit(1, 7))>) {
    for (i = 0; i < 6; i++) {
        rtDW.nmy3zwd5kj[i] = rtB.e5fxhhfzbd[i];
    }
}
if (%<(SLibCGIRIsSampleHit(2, 7))>) {
    for (i = 0; i < 6; i++) {
        rtDW.lo3hyq5jf3[i] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&rtDW.mgkpcfn5tp[i]"], 1, 9, 0))> * rtP.WhiteNoise_StdDev + rtP.WhiteNoise_Mean;
    }
}
simulationData = (NeslSimulationData *)rtDW.jatmhhkalj;
time = %<(SLibCG_SE(LibGetT()))>;
simulationData->mData->mTime.mN = 1;
simulationData->mData->mTime.mX = &time;
simulationData->mData->mContStates.mN = 0;
simulationData->mData->mContStates.mX = NULL;
simulationData->mData->mDiscStates.mN = 0;
simulationData->mData->mDiscStates.mX = &rtDW.l0jpczfi4r;
simulationData->mData->mModeVector.mN = 0;
simulationData->mData->mModeVector.mX = &rtDW.hm3ozn0zck;
tmp = %<(SLibCG_SE(SLibCGIRGetSolverFoundZcEvents()))>;
simulationData->mData->mFoundZcEvents = tmp;
simulationData->mData->mIsMajorTimeStep = %<(SLibCG_SE(LibIsMajorTimeStep()))>;
tmp = %<(SLibCG_SE(SLibCGIRGetSolverAssertCheck()))>;
simulationData->mData->mIsSolverAssertCheck = tmp;
tmp = %<(SLibCG_SE(RTMIsSolverCheckingCIC()))>;
simulationData->mData->mIsSolverCheckingCIC = tmp;
simulationData->mData->mIsComputingJacobian = false;
simulationData->mData->mIsEvaluatingF0 = false;
tmp = %<(SLibCG_SE(RTMIsSolverRequestingReset()))>;
simulationData->mData->mIsSolverRequestingReset = tmp;
tmp_e[0] = 0;
tmp_p[0] = rtB.k1lqdmr4jm[0];
tmp_p[1] = rtB.k1lqdmr4jm[1];
tmp_p[2] = rtB.k1lqdmr4jm[2];
tmp_p[3] = rtB.k1lqdmr4jm[3];
tmp_e[1] = 4;
tmp_p[4] = rtB.hr0kgphdid[0];
tmp_p[5] = rtB.hr0kgphdid[1];
tmp_p[6] = rtB.hr0kgphdid[2];
tmp_p[7] = rtB.hr0kgphdid[3];
tmp_e[2] = 8;
tmp_p[8] = rtB.lhwtiafdtp[0];
tmp_p[9] = rtB.lhwtiafdtp[1];
tmp_p[10] = rtB.lhwtiafdtp[2];
tmp_p[11] = rtB.lhwtiafdtp[3];
tmp_e[3] = 12;
tmp_p[12] = rtB.j4rifafrzn[0];
tmp_p[13] = rtB.j4rifafrzn[1];
tmp_p[14] = rtB.j4rifafrzn[2];
tmp_p[15] = rtB.j4rifafrzn[3];
tmp_e[4] = 16;
tmp_p[16] = rtB.lbbz02dlmh[0];
tmp_p[17] = rtB.lbbz02dlmh[1];
tmp_p[18] = rtB.lbbz02dlmh[2];
tmp_p[19] = rtB.lbbz02dlmh[3];
tmp_e[5] = 20;
tmp_p[20] = rtB.muwz3lcdo5[0];
tmp_p[21] = rtB.muwz3lcdo5[1];
tmp_p[22] = rtB.muwz3lcdo5[2];
tmp_p[23] = rtB.muwz3lcdo5[3];
tmp_e[6] = 24;
simulationData->mData->mInputValues.mN = 24;
simulationData->mData->mInputValues.mX = &tmp_p[0];
simulationData->mData->mInputOffsets.mN = 7;
simulationData->mData->mInputOffsets.mX = &tmp_e[0];
diagnosticManager = (NeuDiagnosticManager *)rtDW.a2ipnclkkw;
diagnosticTree = neu_diagnostic_manager_get_initial_tree(diagnosticManager);
i = ne_simulator_method((NeslSimulator *)rtDW.auqz2qbi5i, NESL_SIM_UPDATE, simulationData, diagnosticManager);
if (i != 0) {
    tmp = error_buffer_is_empty(%<(LibGetRTModelErrorStatus())>);
    if (tmp) {
        msg = rtw_diagnostics_msg(diagnosticTree);
        %<(LibSetRTModelErrorStatus("msg"))>;
    }
}
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedUpdateLocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function UpdateFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 9, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign ::GlobalCurrentTID = []
%endif
%endfunction
